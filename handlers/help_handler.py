from telegram import Update
from telegram.ext import ContextTypes
from utils.logger import logger

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info("üîÑ –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏: /help")
    try:
        await update.message.reply_text(
            "üìã *–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥:*\n"
            "‚û°Ô∏è /start ‚Äì *–í—ñ—Ç–∞–Ω–Ω—è —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è*\n"
            "‚û°Ô∏è /help ‚Äì *–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥*\n"
            "‚û°Ô∏è /rozklad ‚Äì *–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥ –ø–æ–¥—ñ–π* üìÖ\n\n"
            "_–í–∏–±–µ—Ä—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏!_ üöÄ",
            parse_mode='Markdown'
        )
        logger.info("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /help –≤–∏–∫–æ–Ω–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ")
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —É –∫–æ–º–∞–Ω–¥—ñ /help: {e}")
        await update.message.reply_text("‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ /help.")
